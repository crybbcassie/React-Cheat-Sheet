import React from "react";

export default function Component() {
  return (
    <div className="content">
      <div className="content__text">
        <p>Основные методы жизненного цикла:</p>
        <ul>
          <li>
            1. constructor() - функция, позволяющая создать экземпляр класса
            (конструктор, в котором происходит начальная инициализация
            компонента)
          </li>
          <li>
            2. render()- рендеринг компонента (если shouldComponentUpdate
            возвращает true)
          </li>
          <li>
            3. componentDidMount() -КОМПОНЕНТ БЫЛ ОТОБРАЖЕН НА СТРАНИЦЕ
            вызывается после того, как компонент вмонтировался в дом, после
            рендеринга компонента. Здесь можно выполнять запросы к **удаленным
            ресурсам**. Эта функция будет **вызвана лишь раз во всем жизненном
            цикле** данного компонента и будет сигнализировать, что компонент и
            все его дочерние компоненты отрисовались без ошибок.
          </li>
          <li>
            4. componentDidUpdate() - В КОМПОНЕНТЕ ПРОИЗОШЛИ ИЗМЕНЕНИЯ
            вызывается после ререндера **(рендер дидмаунт -к- рендер апдейт):
            componentDidUpdate(prevProps, prevState)** вызывается сразу после
            обновления компонента (если shouldComponentUpdate возвращает true).
            В качестве параметров передаются старые значения объектов props и
            state.
          </li>
          <li>
            5. componentWillUnmount() - КОМПОНЕНТ БУДЕТ УДАЛЕН вызывается перед
            удалением и чистит за собой асинхронные запросы и таймеры (можно
            посмотреть разницу времени нахождения на странице): вызывается перед
            удалением компонента из DOM. Используйте эту функцию для «очистки»
            после компонента, если он использует таймеры (setTimeout,
            setInterval), открывает сокеты или производит любые операции,
            которые нуждаются в закрытии или удалении.
          </li>
          <li>
            6. **shouldComponentUpdate(nextProps, nextState)**: вызывается
            каждый раз при обновлении объекта props или state. В качестве
            параметра передаются новый объект props и state. Эта функция должна
            возвращать true (надо делать обновление) или false (игнорировать
            обновление). По умолчанию возвращается true. Но если функция будет
            возвращать false, то тем самым мы отключим обновление компонента, а
            последующие функции не будут срабатывать.
          </li>
        </ul>
        <p>
          Для использования методов жизненного цикла в функциональных
          компонентах предназначек хук useEffect.
        </p>
      </div>
    </div>
  );
}
